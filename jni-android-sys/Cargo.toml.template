[workspace]
members = ["."]

[package]
name = "jni-android-sys"
version = "0.0.10"
authors = ["MaulingMonkey <git@maulingmonkey.com>"]
edition = "2018"
description = "Autogenerated glue code for access Android JVM APIs from Rust"
documentation = "https://docs.rs/jni-android-sys/"
repository = "https://github.com/MaulingMonkey/jni-bindgen"
keywords = ["jvm", "jni", "bindgen", "android"]
categories = ["external-ffi-bindings", "os"]
license = "MIT OR Apache-2.0"
include = ["/jni-bindgen.toml", "/**/*.rs", "/Cargo.toml", "/LICENSE-MIT", "/LICENSE-APACHE", "Readme.md"]

[dependencies]
cfg-if      = "0.1.9"
jni-glue    = { version = "=0.0.10", path = "../jni-glue" }

[features]
default         = [
    "java-lang-Throwable",          # All the Result<>s in this crate won't compile without this.  TODO:  force / make a non-feature?
    "java-lang-String",             # For stack traces by default
    "java-lang-StackTraceElement",  # For stack traces by default
]
force-define    = [] # By default, the JNI APIs are only compiled against android targets, but this will force them to be defined on windows, linux, OS X, etc. for documentation purpouses.
force-define-x86_64-unknown-linux-gnu = []
nightly         = [] # Nightly-only features.


# The android API level to use.  Note that only api-level-28 is properly tested/supported for now.
# https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels
# The effective API level used by this crate will be the largest one specified.
# That is, if you specify api-level-7 and api-level-13, you'll get all the APIs in 13 defined.
# PLACEHOLDER:FEATURES:api-level-NN



# The android class(es) to define.
# PLACEHOLDER:FEATURES:sharded-api



[package.metadata.docs.rs]
features = ["all", "api-level-28", "force-define-x86_64-unknown-linux-gnu", "nightly"]
default-target = "x86_64-unknown-linux-gnu" # Doesn't matter too much, but at least this kinda looks like Android.
